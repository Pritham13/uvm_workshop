////----------------------------------------------------------------------
//// This file has been automatically generated by
//// VerifStudio Software Version 0.63, Accelver Systems Inc.
//// Any modifications that you make to this file may be
//// overwritten by the tool when regenerating the files. 
////----------------------------------------------------------------------

`ifndef ENHANCED_DEBUG__SV
`define ENHANCED_DEBUG__SV

import uvm_pkg::*;

import "DPI-C" function void vk_enhanced_debug_c(input real   cur_sim_time,
                                                 input int    enhanced_debugdb_enable,
                                                 input string test_name,
                                                 input int    severity,
                                                 input int    verbosity,
                                                 input string id,
                                                 input string full_id,
                                                 input int    action,
                                                 input string message,
                                                 input string file_name,
                                                 input int    line_no);

class vk_enhanced_debug extends uvm_report_catcher;

    // Register the class vk_enhanced_debug with the factory.
    `uvm_object_utils(vk_enhanced_debug)

    // Declare a variable to hold test name
    string m_test_name;

    // Declare a varible to hold the value for enhanced_debugdb_enable setting
    int m_enhanced_debugdb_enable;

    // The Constructor for this Class.
    function new(string name="vk_enhanced_debug");
        super.new(name);
    endfunction: new


    // Declare the function to set test_name
    extern virtual function void set_test_name(string test_name);

    // Declare the function to get test_name
    extern virtual function string get_test_name();

    // Declare the function to set enhanced_debugdb_enable
    extern virtual function void set_enhanced_debugdb_enable(int enable_flag);

    // Declare the function to get enhanced_debugdb_enable
    extern virtual function int get_enhanced_debugdb_enable();

    // override the catch function from base class
    function action_e catch();
        // get the current simulation time
        time cur_sim_time = $time();

        `uvm_info("vk_enhanced_debug",$sformatf("time         : %t ",cur_sim_time                        ),UVM_MEDIUM);
        `uvm_info("vk_enhanced_debug",$sformatf("Testname     : %s ",m_test_name                         ),UVM_MEDIUM);
        `uvm_info("vk_enhanced_debug",$sformatf("severity     : %s ",uvm_severity_type'(get_severity())  ),UVM_MEDIUM);
        `uvm_info("vk_enhanced_debug",$sformatf("verbosity    : %s ",uvm_verbosity'(get_verbosity())     ),UVM_MEDIUM);
        `uvm_info("vk_enhanced_debug",$sformatf("id           : %s ",get_id()                            ),UVM_MEDIUM);
        `uvm_info("vk_enhanced_debug",$sformatf("full_id_name : %s ",get_client().get_full_name()        ),UVM_MEDIUM);
        `uvm_info("vk_enhanced_debug",$sformatf("action       : %s ",uvm_action_type'(get_action())      ),UVM_MEDIUM);
        `uvm_info("vk_enhanced_debug",$sformatf("message      : %s ",get_message()                       ),UVM_MEDIUM);
        `uvm_info("vk_enhanced_debug",$sformatf("file_name    : %s ",get_fname()                         ),UVM_MEDIUM);
        `uvm_info("vk_enhanced_debug",$sformatf("line_number  : %d ",get_line()                          ),UVM_MEDIUM);

        // call the C function
        vk_enhanced_debug_c(cur_sim_time,
                         m_enhanced_debugdb_enable,
                         m_test_name,
                         get_severity(),
                         get_verbosity(),
                         get_id(),
                         get_client().get_full_name(),
                         get_action(),
                         get_message(), 
                         get_fname(),
                         get_line());

        return THROW;

    endfunction: catch

endclass: vk_enhanced_debug

// Define the function to set test_name
function void vk_enhanced_debug::set_test_name(string test_name);
    m_test_name = test_name;
endfunction: set_test_name


// Define the function to get test_name
function string vk_enhanced_debug::get_test_name();
    return m_test_name;
endfunction: get_test_name


// Define the function to set enhanced_debugdb_enable
function void vk_enhanced_debug::set_enhanced_debugdb_enable(int enable_flag);
    m_enhanced_debugdb_enable = enable_flag;
endfunction: set_enhanced_debugdb_enable


// Define the function to get enhanced_debugdb_enable value
function int vk_enhanced_debug::get_enhanced_debugdb_enable();
    return m_enhanced_debugdb_enable;
endfunction: get_enhanced_debugdb_enable



`endif