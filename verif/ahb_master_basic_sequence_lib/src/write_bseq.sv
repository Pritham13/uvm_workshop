////----------------------------------------------------------------------
//// This file has been automatically generated by
//// VerifStudio Software Version 0.63, Accelver Systems Inc.
//// Any modifications that you make to this file may be
//// overwritten by the tool when regenerating the files. 
////----------------------------------------------------------------------

`ifndef WRITE_BSEQ__SV
`define WRITE_BSEQ__SV

class write_bseq#(ADDR_WIDTH=16,DATA_WIDTH=16) extends uvm_sequence#( ahb_master_transaction#(ADDR_WIDTH,DATA_WIDTH) );

    // Register the class write_bseq with the factory.
    `uvm_object_param_utils(write_bseq#(ADDR_WIDTH,DATA_WIDTH))

    rand logic [ADDR_WIDTH-1:0] m_m_address;

    rand logic [DATA_WIDTH-1:0] m_m_wdata;

    // The Constructor for this Class.
    function new(string name="write_bseq");
        super.new(name);
    endfunction: new

    // Declare the body of the Sequence
    extern task body();

endclass: write_bseq


task write_bseq::body();

    req = ahb_master_transaction#(ADDR_WIDTH,DATA_WIDTH)::type_id::create("req");
    start_item(req);

    // Randomize the sequence and start it on the sequencer.
    if(!req.randomize() with 
                           {
                            m_read_write == AHB_WRITE;
                            m_address == local::m_m_address;
                            m_wdata == local::m_m_wdata;
                           })
    begin
        `uvm_fatal(get_type_name(), "[RAND_FAILED]: Randomization failed due to violation of transaction constraints.")
    end

    finish_item(req);

    // Wait for a Response from the Driver (will be unblocked by put_response(rsp) call).
    get_response(rsp);

endtask : body


`endif
